

%stack {


  &.select {
    margin-top: 0px;

    select {
      position: relative;
      border-radius: 0;
      height: calc(#{$picnic-select-height} + 1px);

      &:focus {
        z-index: 2;
        }
      }

    &:first-child {
      margin-top: 0;
      }


    &:first-child select {
      border-top-left-radius: $picnic-radius;
      border-top-right-radius: $picnic-radius;
      }


    &:last-child select {
      border-bottom-left-radius: $picnic-radius;
      border-bottom-right-radius: $picnic-radius;
      }
    }
  }


// Stacking elements one of top of another
.stack,
.stack .toggle {
  @extend %stack;
  display: block;
  width: 100%;
  text-align: left;
  border-radius: 0;
  }

// This is in this way to allow for individual stack items
// Because if it was border-radius: $picnic-radius $picnic-radius 0 0;
// then they would all behave as last-child
.stack:first-child,
.stack:first-child .toggle {
  border-top-left-radius: $picnic-radius;
  border-top-right-radius: $picnic-radius;
  }

.stack:last-child,
.stack:last-child .toggle {
  border-bottom-left-radius: $picnic-radius;
  border-bottom-right-radius: $picnic-radius;
  }

// To avoid the double border of input and textarea
input,
textarea {

  &.stack {
    transition: border-bottom 0 ease 0;
    border-bottom-width: 0;

    &:last-child {
      border-bottom-width: 1px;
      }

    &:focus + input,
    &:focus + textarea {
      border-top-color: $picnic-primary;
      }
    }
  }

